- name: Configure Public VM with Load Balancer, Semaphore and Ansible
  hosts: public
  become: yes
  remote_user: azureuser

  vars:
    semaphore_admin_user: admin
    semaphore_admin_email: azul-k@hotmail.com
    semaphore_admin_password: admin
    ip_ws_1: "{{ groups['ws'][0] }}"
    ip_ws_2: "{{ groups['ws'][1] }}"
    port_ws: 3000
    lb_port: 8080
    nginx_conf_directory: /etc/nginx

  tasks:
    - name: Install semaphore with Snap
      community.general.snap:
        name: semaphore
        state: present

    - name: Get user if exists
      command: semaphore user get --login {{ semaphore_admin_user }}
      ignore_errors: true
      register: user

    - name: Create admin user 
      command: semaphore user add --admin --login {{ semaphore_admin_user }} --name={{ semaphore_admin_user }} --email={{ semaphore_admin_email }} --password={{ semaphore_admin_password }}
      when: user.stderr != ""

    - name: Check status of Semaphore service with Snap
      community.general.snap:
        name: semaphore

    - name: Ensure NGINX is installed
      ansible.builtin.apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Ensure NGINX is started and enabled
      ansible.builtin.systemd:
        name: nginx
        state: started
        enabled: yes
    
    - name: Deploy nginx.conf from template
      ansible.builtin.template:
        src: ../templates/nginx.conf.j2
        dest: "{{ nginx_conf_directory }}/nginx.conf"
        mode: '0644'

    - name: Remove default configuration
      ansible.builtin.file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent

    - name: Restart Nginx service
      ansible.builtin.service:
        name: nginx
        state: restarted

    - name: Install required system packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - pip

    - name: Install ansible python package
      ansible.builtin.pip:
        name: "{{ item }}"
      loop: 
        - ansible
        - ansible-core

    - name: Download collection from Ansible Galaxy
      command: ansible-galaxy -vvv collection install community.general

    - name: Clone TPE Redes Repo from GitHub
      ansible.builtin.git:
        repo: https://github.com/arfernandez2000/tpe-redes
        dest: ./tpe-redes
        single_branch: yes
        version: main

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: "./tpe-redes/keys/{{ item }}"
        mode: '0400'
      loop:
       - private.pem
       - db_private.pem
       - ws_private.pem