---
- name: Configure PostgreSQL Server
  hosts: db
  become: true
  remote_user: azureuser

  vars:
    postgresql_version: 12
    postgresql_data_directory: /var/lib/postgresql/{{ postgresql_version }}/main
    postgresql_conf_directory: /etc/postgresql/{{ postgresql_version }}/main
    postgresql_listen_addresses: '*'
    postgresql_max_connections: 100
    postgresql_port: 5432
    postgresql_shared_buffers: '128MB'
    postgresql_database: mydatabase
    postgresql_user: myuser
    postgresql_password: mypassword
    postgresql_hba_entries:
      #TODO: change method to md5
      - { type: 'local', database: 'all', user: 'all', address: '', method: 'trust' }
      - { type: 'host', database: 'all', user: 'all', address: '127.0.0.1/32', method: 'md5' }
      - { type: 'host', database: 'all', user: 'all', address: '::1/128', method: 'md5' }
      - { type: 'host', database: 'all', user: 'all', address: '0.0.0.0/0', method: 'md5' }

  tasks:
    - name: Add pgdg repo to sources.list.d
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/pgdg.list
        line: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
        create: true

    - name: Download PostgreSQL key and add it to system keyring
      ansible.builtin.apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: Install PostgreSQL and PostgreSQL Client
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - postgresql
        - postgresql-client

    - name: Install python, psycopg2 and acl
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-psycopg2
        - acl

    - name: Ensure PostgreSQL is started and enabled
      ansible.builtin.systemd:
        name: postgresql
        state: started
        enabled: true

    - name: Initialize PostgreSQL data directory
      become_user: postgres
      become: true
      ansible.builtin.command: "/usr/lib/postgresql/{{ postgresql_version }}/bin/initdb -D {{ postgresql_data_directory }}"
      args:
        creates: "{{ postgresql_data_directory }}/PG_VERSION"

    - name: Deploy postgresql.conf from template
      ansible.builtin.template:
        src: ../templates/postgresql.conf.j2
        dest: "{{ postgresql_conf_directory }}/postgresql.conf"
        owner: postgres
        group: postgres
        mode: '0644'
      notify: Restart PostgreSQL

    - name: Deploy pg_hba.conf from template
      ansible.builtin.template:
        src: ../templates/pg_hba.conf.j2
        dest: "{{ postgresql_conf_directory }}/pg_hba.conf"
        owner: postgres
        group: postgres
        mode: '0640'
      notify: Reload PostgreSQL

    - name: Ensure PostgreSQL data directory has correct permissions
      ansible.builtin.file:
        path: "{{ postgresql_data_directory }}"
        owner: postgres
        group: postgres
        mode: '0700'

    - name: Create PostgreSQL database - mydatabase
      become: true
      become_user: postgres
      community.postgresql.postgresql_db:
        name: "{{ postgresql_database }}"

    - name: Create PostgreSQL user - myuser
      become: true
      become_user: postgres
      community.postgresql.postgresql_user:
        name: "{{ postgresql_user }}"
        password: "{{ postgresql_password }}"

    - name: Allow user myuser to do all actions in database mydatabase
      become: true
      become_user: postgres
      community.postgresql.postgresql_privs:
        db: "{{ postgresql_database }}"
        state: present
        privs: ALL
        objs: ALL_IN_SCHEMA
        role: "{{ postgresql_user }}"

    - name: Allow incoming connections on port 5432
      community.general.ufw:
        rule: allow
        port: 5432
        proto: tcp

    - name: Allow incoming connections on port 22
      community.general.ufw:
        rule: allow
        port: 22
        proto: tcp

    - name: Allow incoming connections on port 5433
      community.general.ufw:
        rule: deny
        port: 5433
        proto: tcp

    - name: Enable UFW
      community.general.ufw:
        state: enabled

  handlers:
    - name: Restart PostgreSQL
      ansible.builtin.systemd:
        name: postgresql
        state: restarted

    - name: Reload PostgreSQL
      ansible.builtin.systemd:
        name: postgresql
        state: reloaded
